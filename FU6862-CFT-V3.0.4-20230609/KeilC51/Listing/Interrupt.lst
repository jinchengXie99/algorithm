C51 COMPILER V9.60.7.0   INTERRUPT                                                         08/30/2023 13:47:05 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE INTERRUPT
OBJECT MODULE PLACED IN .\Output\Interrupt.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\User\Source\Application\Interrupt.c LARGE OMF2 WARNINGLEVEL(0) OPTIMI
                    -ZE(9,SPEED) BROWSE INCDIR(..\User\Include;..\FU68xx_Hardware_Driver\Include) DEBUG PRINT(.\Listing\Interrupt.lst) TABS(2
                    -) OBJECT(.\Output\Interrupt.obj)

line level    source

   1          /*  -------------------------- (C) COPYRIGHT 2022 Fortiortech ShenZhen ---------------------------*/
   2          /**
   3           * @copyright (C) COPYRIGHT 2022 Fortiortech Shenzhen
   4           * @file      xxx.c
   5           * @author    Fortiortech  Appliction Team
   6           * @since     Create:2022-07-14
   7           * @date      Last modify:2022-08-07
   8           * @note      Last modify author is Leo.li
   9           * @brief      
  10           */
  11          
  12          /* Includes -------------------------------------------------------------------------------------*/
  13          #include <FU68xx_2.h>
  14          #include <Myproject.h>
  15          #include <math.h>
  16          
  17          extern uint8 data g_1mTick;                   ///< 1msÊª¥Á≠î‰ø°Âè∑ÔºåÊØèÈöî1msÂú®SYSTICKÂÆöÊó∂Âô®Ë¢´ÁΩÆ1Ôº
             -åÈúÄÂú®Â§ßÂæ™ÁéØ‰ΩøÁî®Â§ÑÊ∏ÖÈõ∂
  18          
  19          uint16 xdata spidebug[4] = { 0 };
  20          uint8 PWM_Count = 0;
  21          uint8 Getzero_flag = 0;
  22          
  23          uint8 VoltDetecExternCnt = 0;
  24          
  25          /** 
  26           * @brief        FO_INT interruptÔºåÁ°¨‰ª∂FOËøáÊµÅ‰øùÊä§ÔºåÂÖ≥Êñ≠ËæìÂá∫Ôºå‰∏≠Êñ≠‰ºòÂÖàÁ∫ßÊúÄÈ´ò
  27           * @date         2022-08-07  
  28           */
  29          void FO_INT(void) interrupt 1                                                   // Á°¨‰ª∂FOËøáÊµÅ‰∏≠Êñ≠Ôºå
             -ÂÖ≥Èó≠ËæìÂá∫
  30          {
  31   1          MOE     = 0;                                                                // ÂÖ≥Èó≠ËæìÂá∫
  32   1          mcFaultSource = FaultHardOVCurrent;                                         // Á°¨‰ª∂ËøáÊµÅ‰øùÊä§
  33   1          IF0           = 0;                                                          // clear P00 interrupt fla
             -g
  34   1      }
  35          
  36          
  37          /** 
  38           * @brief        Â§ñÈÉ®‰∏≠Êñ≠ÔºöÁî®‰∫éËøáÈõ∂Ê£ÄÊµãÂíåÂèëÁÉ≠ÊéßÂà∂
  39           * @date         2022-08-07  
  40           */
  41          void EXTERN_INT(void) interrupt 2
  42          {
  43   1      //    static uint16 ScrOnTime = 0;
  44   1          
  45   1          VoltDetecExternCnt = 60;                // Ëøõ‰∏≠Êñ≠ËµãÂàùÂÄº
  46   1      //                 //ÂèëÁÉ≠ÂºÄÂêØÊó∂Èó¥ 
  47   1      //      /* ÁîµÊú∫ËøêË°åË∂ÖËøá200ms„ÄÅÁîµÊú∫ËøêË°å‰∏≠„ÄÅÁîµÊú∫ËΩ¨ÈÄüË∂ÖËøá12000RPM */
  48   1      //    if ((User.TPCtrlDealy < 4800) && (mcState == mcRun) && (mcFocCtrl.SpeedFlt > 12000))
  49   1      //    {
  50   1      //        ScrOnTime ++;                     // ËøáÈõ∂ÁÇπËÆ°Êï∞ÔºåÂõΩÂÜÖÁîµÁΩë50HzÔºå‰∏ÄËà¨10msËøõ‰∏ÄÊ¨°
C51 COMPILER V9.60.7.0   INTERRUPT                                                         08/30/2023 13:47:05 PAGE 2   

  51   1      //        if (ScrOnTime <= User.ScrOnPeriod)    // ËøáÈõ∂Âë®ÊúüÂÜÖ
  52   1      //        {     /* -----ÈùûÂÜ∑È£éÊ°£‰ª•ÂèäÂºÄÂêØÂë®ÊúüÂÜÖ----- */
  53   1      //            if ((ScrOnTime < User.ScrOnAngleTimeDatum) && (User.ScrOnAngleTime != Temperature_Off))
  54   1      //            {
  55   1      //                GP01 = 0;                                  //ÊâìÂºÄÂèëÁÉ≠‰∏ù
  56   1      //            }
  57   1      //            else      // Ë∂ÖËøáÂºÄÂêØÂë®ÊúüÊàñÂÜ∑È£éÊ°£ÂàôÂÖ≥Èó≠ÂèëÁÉ≠‰∏ù
  58   1      //            {
  59   1      //                GP01 = 1;                                  //ÂÖ≥Èó≠ÂèëÁÉ≠‰∏ù
  60   1      //            }
  61   1      //        }
  62   1      //        else              //‰∏Ä‰∏™Âë®ÊúüÂÆåÊàêÂêé
  63   1      //        {
  64   1      //            ScrOnTime = 0;
  65   1      
  66   1      //      Temperature_Control();                         //ÂèëÁÉ≠ÂäüÁéáÊéßÂà∂
  67   1      //        }       
  68   1      //    }   
  69   1      //  else
  70   1      //  {
  71   1      //    GP01 = 1;                                         //ÂÖ≥Èó≠ÂèëÁÉ≠‰∏ù
  72   1      //  }
  73   1                      
  74   1                      
  75   1      //    if((mcState == mcRun) && (Heat_on_delay >= 1200) && (Cool_Lv == 0) && (Overtmp_flag == 0))    // ‰∫§
             -ÊµÅÁîµËøáÈõ∂ÁÇπÔºåÊ£ÄÊµãÂà∞ËøáÈõ∂ÁÇπÊâç‰ºöËøõÂÖ•   ÂÆûÈôÖ20msËøõ‰∏ÄÊ¨°ÔºåÂíåÁ°¨‰ª∂ËÆæËÆ°ÊúâÂÖ≥
  76   1      //    {
  77   1      //        /* -----ËøáÈõ∂ÁÇπ‰∏™Êï∞ËÆ°Êï∞----- */
  78   1      //        Heat_on_cnt++;          // ÂèòÈáèËá™Âä†Ôºå‰∏çËÉΩÊîæÂú®ÂâçÈù¢
  79   1      //        
  80   1      //    /* -ËØ•ÂÄºÊ≠§Êó∂‰∏∫8ÂèØËøõÂÖ•Âà§Êñ≠ÔºåÂç≥Á¨¨8‰∏™ËøáÈõ∂ÁÇπÂèØËøõÂÖ•‰∏ãËø∞Âà§Êñ≠ÔºåÂÆûÈôÖÊó∂Èó¥‰∏∫160m
             -sÔºåÂç≥‰∏ÄÊÆµÂë®ÊúüÂÆåÊàê- */
  81   1      //        if(Heat_on_cnt >= HEAT_TIMECNT_MAX) // Á¨¨8Ê¨°ËøáÈõ∂‰ø°Âè∑Êõ¥Êñ∞Âë®ÊúüÔºåÂç≥ÂçïÊÆµÂë®ÊúüÁªìÊùü 1
             -60ms
  82   1      //        {
  83   1      //            Heat_on_cnt = 0;
  84   1      //            Heatdutycnt++;
  85   1      //            if(Heatdutycnt > 2)
  86   1      //            {
  87   1      //                Heatdutycnt = 0;
  88   1      //            }
  89   1      //            Heat_duty_cycle = Heatduty[Heatdutycnt];    // ÂèëÁÉ≠‰∏ùËæìÂá∫Âë®Êúü‰∏âÊÆµËµãÂÄº
  90   1      //        }
  91   1      //        else
  92   1      //        {
  93   1      //            if(Heat_on_cnt <= Heat_duty_cycle) 
  94   1      //            {
  95   1      //                GP07 = HEAT_ON_LEVEL;     
  96   1      //            }
  97   1      //            else
  98   1      //            {
  99   1      //                GP07 = !HEAT_ON_LEVEL;
 100   1      //            }
 101   1      //        }
 102   1      //    }
 103   1      //    else
 104   1      //    {
 105   1      //        GP07 = !HEAT_ON_LEVEL;
 106   1      //    }
 107   1          
 108   1          Getzero_flag = 1;           // ËøáÈõ∂ÁÇπÊ†áËÆ∞
 109   1          
C51 COMPILER V9.60.7.0   INTERRUPT                                                         08/30/2023 13:47:05 PAGE 3   

 110   1          if((Heat_on_flag) && (Cool_Lv == 0) && (Overtmp_flag == 0) && (OverVoltageflag == 0))
 111   1          {
 112   2              GP07 = HEAT_ON_LEVEL;
 113   2          }
 114   1          else
 115   1          {
 116   2              GP07 = !HEAT_ON_LEVEL;
 117   2          }
 118   1          ClrBit(P2_IF, P21);                                   // Ê∏ÖÈõ∂‰∏≠Êñ≠Ê†áÂøó‰Ωç
 119   1      }
 120          
 121          /** 
 122           * @brief        Time2-BEMFÈ°∫ÈÄÜÈ£éÊ£ÄÊµã
 123           * @date         2022-08-07  
 124           */
 125          void TIM2_INT(void) interrupt 4
 126          {
 127   1          if (ReadBit(TIM2_CR1, T2IR))
 128   1          { 
 129   2              ClrBit(TIM2_CR1, T2IR);
 130   2          }
 131   1          
 132   1          if (ReadBit(TIM2_CR1, T2IP))
 133   1          {
 134   2              ClrBit(TIM2_CR1, T2IP);
 135   2          }
 136   1          
 137   1          if (ReadBit(TIM2_CR1, T2IF))
 138   1          {
 139   2              ClrBit(TIM2_CR1, T2EN);                  //ÂÖ≥Èó≠ËÆ°Êï∞Âô®
 140   2              ClrBit(TIM2_CR1, T2IF);
 141   2          }
 142   1      }
 143          
 144          /** 
 145           * @brief        CMP3ÔºöÁ°¨‰ª∂ÊØîËæÉÂô®ËøáÊµÅ‰øùÊä§ÔºåÂÖ≥Êñ≠ËæìÂá∫Ôºå‰∏≠Êñ≠‰ºòÂÖàÁ∫ßÊúÄÈ´ò
 146           * @brief        CMP0/1/2ÔºöÈ°∫ÈÄÜÈ£éÂà§Êñ≠
 147           * @date         2022-07-14  
 148           */
 149          void CMP_ISR(void) interrupt 7
 150          {
 151   1          if (ReadBit(CMP_SR, CMP3IF))
 152   1          {
 153   2              if (mcState != mcPosiCheck)
 154   2              {
 155   3                  MOE     = 0;                                                        // ÂÖ≥Èó≠ËæìÂá∫
 156   3                  mcFaultSource = FaultHardOVCurrent;                                 // Á°¨‰ª∂ËøáÊµÅ‰øùÊä§
 157   3              }
 158   2              else
 159   2              {
 160   3            MOE     = 0; 
 161   3            #if(PosCheckEnable)                                                                                 // 
             -ÂÖ≥Èó≠MOE
                          RPDPara.InsetCount[RPDPara.injecttimes]  = TIM2__CNTR;                              // Â∞ÜÂÆöÊ
             -ó∂Âô®2ÁöÑËÆ°Êï∞ÂÄºËµãÂÄºÁªôÊï∞ÁªÑ
                          RPDPara.DetectCount[RPDPara.injecttimes] = RPDPara.InsetCount[RPDPara.injecttimes]; // ‰∏§ÁªÑÊ
             -ï∞ÊçÆÔºå‰∏ÄÁªÑÁî®‰∫éËßÇÂØüÂéüÂßãÊï∞ÊçÆÔºå‰∏ÄÁªÑÁî®‰∫éÂ§ÑÁêÜÊï∞ÊçÆ
                          TIM2__CNTR                               = 0;                                       // TIM2ËÆ°
             -Êï∞Âô®ÂÄºÊ∏ÖÈõ∂
                          RPDPara.injecttimes++;                                                              // RPDÊ≥®Â
             -Ö•ÊãçÊï∞Á¥ØÂä†
                          #endif
C51 COMPILER V9.60.7.0   INTERRUPT                                                         08/30/2023 13:47:05 PAGE 4   

 167   3               }
 168   2              
 169   2              ClrBit(CMP_SR, CMP3IF);           //Ê∏ÖÈô§ÊØîËæÉÂô®‰∏≠Êñ≠
 170   2          }
 171   1          /*------ÈÄöËøáBEMFÂÅöÈ°∫È£éÂêØÂä®ÂäüËÉΩ -----*/
 172   1          #if ((FRDetectMethod == BEMFMethod)&&(TailWind_Mode == TailWind))   
                  BEMFDetectFunc();
                  #endif
 175   1      }
 176          
 177          
 178          /** 
 179           * @brief        Capture PWM ÔºåÁî®‰∫éPWMË∞ÉÈÄü
 180           * @date         2022-08-07  
 181           */
 182          void TIM3_INT(void) interrupt 9
 183          {
 184   1          if (ReadBit(TIM3_CR1, T3IR))
 185   1          {      
 186   2              ClrBit(TIM3_CR1, T3IR);
 187   2          }
 188   1          
 189   1          if (ReadBit(TIM3_CR1, T3IP))                                   //Âë®Êúü‰∏≠Êñ≠
 190   1          {
 191   2              ClrBit(TIM3_CR1, T3IP);
 192   2          }
 193   1          
 194   1          if (ReadBit(TIM3_CR1, T3IF))
 195   1          {
 196   2              ClrBit(TIM3_CR1, T3IF);
 197   2          }
 198   1      }
 199          
 200          /** 
 201           * @brief        FOC‰∏≠Êñ≠(Drv‰∏≠Êñ≠), ÂèØÈÖçÁΩÆ1 | 2 ‰∏™ËΩΩÊ≥¢Âë®ÊúüÊâßË°å‰∏ÄÊ¨°ÔºåÁî®‰∫éÂ§ÑÁêÜÂìçÂ∫îËæÉÈ
             -´òÁöÑÁ®ãÂ∫è
 202           * @date         2022-08-07  
 203           */
 204          void FOC_INT(void) interrupt 3
 205          {    
 206   1          if (ReadBit(DRV_SR, DCIF))                                        // ÊØîËæÉ‰∏≠Êñ≠
 207   1          {
 208   2          #if (START_MODE == Observer_Start)
                  {
                          StartupState();
                  }
                  #endif
 213   2                
 214   2              #if ((FRDetectMethod == FOCMethod) && (TailWind_Mode == TailWind))
                      {
                          TailWindSpeedDetect();                                    //È°∫ÈÄÜÈ£éÊ£ÄÊµã
                      }
                      #endif
 219   2          
 220   2              DRV_SR = (DRV_SR | SYSTIF) & (~DCIF);   // DRV_SR,  SYSTIF  DCIF
 221   2          }
 222   1      }
 223          
 224          /** 
 225           * @brief        1msÂÆöÊó∂Âô®‰∏≠Êñ≠ÔºàSYS TICK‰∏≠Êñ≠ÔºâÔºåÁî®‰∫éÂ§ÑÁêÜÈôÑÂä†ÂäüËÉΩÔºåÂ¶ÇÊéßÂà∂ÁéØË∑ØÂìçÂ∫î
             -„ÄÅÂêÑÁßç‰øùÊä§Á≠â„ÄÇ
 226           * @date         2022-08-07  
C51 COMPILER V9.60.7.0   INTERRUPT                                                         08/30/2023 13:47:05 PAGE 5   

 227           */
 228          void TIM_1MS_INT(void) interrupt 10
 229          {
 230   1          if (ReadBit(DRV_SR, SYSTIF))                             // SYS TICK‰∏≠Êñ≠
 231   1          {
 232   2              g_1mTick = 1;
 233   2              SetBit(ADC_CR, ADCBSY);                              //‰ΩøËÉΩADCÁöÑDCBUSÈááÊ†∑
 234   2          
 235   2          /*****ÁîµÊú∫Áä∂ÊÄÅÊú∫ÁöÑÊó∂Â∫èÂ§ÑÁêÜ*****/
 236   2              if (mcFocCtrl.State_Count > 0)
 237   2              {
 238   3                  mcFocCtrl.State_Count--;
 239   3              }
 240   2          
 241   2              if(VoltDetecExternCnt > 0)  VoltDetecExternCnt--;
 242   2          
 243   2          WatchDogRefresh();
 244   2              
 245   2              DRV_SR = (DRV_SR | DCIF) & (~SYSTIF);
 246   2          }
 247   1          
 248   1          if (ReadBit(TIM4_CR1, T4IR))
 249   1          {
 250   2              ClrBit(TIM4_CR1, T4IR);
 251   2          }
 252   1          
 253   1          if (ReadBit(TIM4_CR1, T4IP))                             //Âë®Êúü‰∏≠Êñ≠
 254   1          {
 255   2              ClrBit(TIM4_CR1, T4IP);
 256   2          }
 257   1          
 258   1          if (ReadBit(TIM4_CR1, T4IF))
 259   1          {
 260   2              ClrBit(TIM4_CR1, T4IF);
 261   2          }
 262   1      }
 263          
 264          /** 
 265           * @brief        ‰∏≤Âè£‰∏≠Êñ≠
 266           * @date         2022-08-07  
 267           */
 268          void USART_INT(void)  interrupt 12
 269          {
 270   1          if (RI == 1)
 271   1          {
 272   2              RI = 0;
 273   2              Uart.Uredata = UT_DR;                    //ËØªÊé•Êî∂Êï∞ÊçÆ
 274   2          }
 275   1      }
 276          
 277          /* Private variables ----------------------------------------------------------------------------*/
 278          void INT0(void) interrupt 0
 279          {
 280   1      }
 281          void INT5(void) interrupt 5
 282          {
 283   1      }
 284          void INT6(void) interrupt 6
 285          {
 286   1      }
 287          void INT8(void) interrupt 8
 288          {
C51 COMPILER V9.60.7.0   INTERRUPT                                                         08/30/2023 13:47:05 PAGE 6   

 289   1      }
 290          void INT11(void) interrupt 11
 291          {
 292   1      }
 293          void INT13(void) interrupt 13
 294          {
 295   1      }
 296          void INT14(void) interrupt 14
 297          {
 298   1      }
 299          void INT15(void) interrupt 15
 300          {
 301   1      }
 302          
 303          
 304          
 305          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    450    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     11    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
