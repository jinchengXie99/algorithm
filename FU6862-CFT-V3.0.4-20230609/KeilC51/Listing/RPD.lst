C51 COMPILER V9.60.7.0   RPD                                                               08/30/2023 13:47:06 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE RPD
OBJECT MODULE PLACED IN .\Output\RPD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\User\Source\Function\RPD.c LARGE OMF2 WARNINGLEVEL(0) OPTIMIZE(9,SPEE
                    -D) BROWSE INCDIR(..\User\Include;..\FU68xx_Hardware_Driver\Include) DEBUG PRINT(.\Listing\RPD.lst) TABS(2) OBJECT(.\Outp
                    -ut\RPD.obj)

line level    source

   1          /*  -------------------------- (C) COPYRIGHT 2022 Fortiortech ShenZhen ---------------------------*/
   2          /**
   3           * @copyright (C) COPYRIGHT 2022 Fortiortech Shenzhen
   4           * @file      xxx.c
   5           * @author    Fortiortech  Appliction Team
   6           * @since     Create:2021-07-14
   7           * @date      Last modify:2022-07-30
   8           * @note      Last modify author is Leo.li
   9           * @brief      
  10           */
  11           
  12          #include <FU68xx_2.h>
  13          #include <Myproject.h>
  14          
  15          /* Private define -------------------------------------------------------------------------------*/
  16          #if(PosCheckEnable)
              RPD_TypeDef RPD_Status;
              RPD_Param_TypeDef RPDPara;
              
              /** 
               * @brief      RPDÂàùÂßãÂåñ
               * @date       2022-07-14
               */
              void RPD_Init(void)
              {
                  RPD_Status = RPD_0;
                  RPDPara.DetectCount[0] = 0;
                  RPDPara.DetectCount[1] = 0;
                  RPDPara.DetectCount[2] = 0;
                  RPDPara.DetectCount[3] = 0;
                  RPDPara.DetectCount[4] = 0;
                  RPDPara.DetectCount[5] = 0;
                  RPDPara.DetectCount[6] = 0;
                  RPDPara.DetectCount[7] = 0;
                  RPDPara.InsetCount[0] = 0;
                  RPDPara.InsetCount[1] = 0;
                  RPDPara.InsetCount[2] = 0;
                  RPDPara.InsetCount[3] = 0;
                  RPDPara.InsetCount[4] = 0;
                  RPDPara.InsetCount[5] = 0;
                  RPDPara.InsetCount[6] = 0;
                  RPDPara.InsetCount[7] = 0;
                  RPDPara.U_Offset   = (mcCurOffset.IuOffset - 16383) >> 6;
                  RPDPara.V_Offset   = (mcCurOffset.IvOffset - 16383) >> 6;
                  RPDPara.W_Offset   = (mcCurOffset.Iw_busOffset - 16383) >> 6;
                  RPDPara.injectmin = 0;
                  RPDPara.injectmid = 0;
                  RPDPara.ThetaGet = 0xFF;
                  RPDPara.injecttimes = 0;
              }
              
              
              /** 
C51 COMPILER V9.60.7.0   RPD                                                               08/30/2023 13:47:06 PAGE 2   

               * @brief      RPDÂØπÂ∫îTime2ÁöÑÂàùÂßãÂåñ
               * @date       2022-07-14
               */
              void Time2_RPD_Init(void)
              {
                  /*  -------------------------------------------------------------------------------------------------
                      ÂÖàÂÅúÊ≠¢ËÆ°Êï∞ÔºåÈÖçÁΩÆÂÆåÂØÑÂ≠òÂô®ÂêéÔºåÊúÄÂêéÂêØÂä®ËÆ°Êï∞
                      -------------------------------------------------------------------------------------------------*
             -/
                  ClrBit(TIM2_CR1, T2EN);                                    // 0ÔºåÂÅúÊ≠¢ËÆ°Êï∞Ôºõ1,‰ΩøËÉΩËÆ°Êï∞
                  /*  -------------------------------------------------------------------------------------------------
                      Êó∂ÈíüÂàÜÈ¢ëËÆæÁΩÆ(TIM2_PSC)
                      000:cpuclk(24MHz)         001:cpuclk/2^1(12MHz)   010:cpuclk/2^2(6MHz)    011:cpuclk/2^3(3MHz)
                      100:cpuclk/2^4(1.5MHz)    101:cpuclk/2^5(750KHz)  110:cpuclk/2^6(375KHz)  111:cpuclk/2^7(187.5KHz)
                      -------------------------------------------------------------------------------------------------*
             -/
                  #if (InjectTime == Short_Inject)
                  {
                      SetReg(TIM2_CR0, T2PSC0 | T2PSC1 | T2PSC2, 0x00);
                  }
                  #elif (InjectTime == Long_Inject)
                  {
                      SetReg(TIM2_CR0, T2PSC0 | T2PSC1 | T2PSC2, T2PSC0);
                  }
                  #endif
                  /*  -------------------------------------------------------------------------------------------------
                      /Ê®°ÂºèÈÄâÊã©
                      TIM2_MOD1ÔºåTIM2_MOD0
                      00--ËæìÂÖ•TimerÊ®°ÂºèÔºõ01--ËæìÂá∫Ê®°Âºè
                      10--ËæìÂÖ•CountÊ®°ÂºèÔºõ11--QEPÊàñËÄÖRSDÊ®°Âºè
                      -------------------------------------------------------------------------------------------------*
             -/
                  SetReg(TIM2_CR0, T2MOD0 | T2MOD1, T2MOD0);
                  SetBit(TIM2_CR1, T2FE);                                    // Êª§Ê≥¢‰ΩøËÉΩ
                  /*  -------------------------------------------------------------------------------------------------
                      Ê∏ÖÈô§‰∏≠Êñ≠Ê†áÂøó‰Ωç
                      ‰∏çÈÖçÁΩÆ‰∏≠Êñ≠
                      -------------------------------------------------------------------------------------------------*
             -/
                  ClrBit(TIM2_CR1, T2IR | T2IP | T2IF);
                  ClrBit(TIM2_CR0, T2IRE | T2CES);                          // QEP&RSDÊñπÂêëÊîπÂèò‰∫ã‰ª∂
                  ClrBit(TIM2_CR1, T2IPE | T2IFE);                          // Ê∏ÖÈõ∂‰∏äÂçáÊ≤øÊ£ÄÊµã‰∏≠Êñ≠
                  /*  -------------------------------------------------------------------------------------------------
                      ÈÖçÁΩÆÂë®ÊúüÂÄº„ÄÅÊØîËæÉÂÄº„ÄÅËÆ°Êï∞ÂÄº
                      Á¶ÅÊ≠¢PWMÂë®ÊúüÊ£ÄÊµã‰∏≠Êñ≠‰ΩøËÉΩ
                      ‰ΩøËÉΩËÆ°Êï∞Âô®‰∏äÊ∫¢‰∏≠Êñ≠‰ΩøËÉΩ
                      -------------------------------------------------------------------------------------------------*
             -/
                  TIM2__CNTR = 0;
                  TIM2__ARR = 0xFFFF;
              }
              
              /** 
               * @brief      RPD
               * @date       2022-07-14
               */
              void RPD(void)
              {
                  if (McStaSet.SetFlag.PosiCheckSetFlag  == 0)       // ÂàùÂßãÂåñRPDÈÖçÁΩÆ
                  {
                      McStaSet.SetFlag.PosiCheckSetFlag = 1;
                      RPD_Init();                                   // RPDÂèòÈáèÂàùÂßãÂåñ
C51 COMPILER V9.60.7.0   RPD                                                               08/30/2023 13:47:06 PAGE 3   

                      Time2_RPD_Init();                             // RPDÁöÑTime2ÂàùÂßãÂåñ
                      SetBit(PI_LPF_CR, T2RPD);                     // ‰ΩøËÉΩRPD,Âç≥ÂΩìÊØîËæÉÂô®3‰∫ßÁîü‰∏≠Êñ≠ÔºåÂØπÂ∫îÁö
             -ÑTime2ÁöÑËÆ°Êï∞Âô®ÁöÑÊï∞ÊçÆ‰ºö‰øùÂ≠òÔºåÂÖ≥Èó≠MOEÔºåÂÅúÊ≠¢TIM2ËÆ°Êï∞
                      MOE = 0;                                      // ÂÖ≥Èó≠MOE
                      DRV_DR = DRV_ARR + 1;
                      ClrBit(DRV_CR, OCS);                          // ËÆ°Êï∞Âô®ÊØîËæÉÂÄºÊù•Ê∫êÔºå0-ÊñπÊ≥¢Ôºõ1-FOC,SVPWM
             -,SPWM
                      SetBit(DAC_CR, DACEN);                        // ‰ΩøËÉΩDAC
                                     
                      if (mcCurOffset.Iw_busOffset > 10922)
                      {
                          SetBit(DAC_CR, DACMOD);                       // 0: Ê≠£Â∏∏Ê®°ÂºèÔºåDACËæìÂá∫ÁîµÂéãËåÉÂõ¥‰∏∫0Âà
             -∞VREF„ÄÇ1: ÂçäÁîµÂéãËΩ¨Êç¢Ê®°ÂºèÔºåDACËæìÂá∫ÁîµÂéãËåÉÂõ¥‰∏∫VHALFÂà∞VREF„ÄÇ
                      }
                      else
                      {
                          ClrBit(DAC_CR, DACMOD);
                      } 
                  DAC_DR = DAC_RPDCurValue;                 //ËÆæÁΩÆÊ£ÄÊµãÁîµÊµÅ
                  }
              }
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
